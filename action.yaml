#------------------------------------------------------------------------------
# Sends a message to a Microsoft Teams channel URI.
#
# Each sending user sending messages will need a Teams channel URI for each channel
# being targeted.  This URI identifies the user by name and optionally a profile image
# and also includes a secret that authenticates the operation.  You can obtain channel
# URIs by following:
#
#   https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using
#
# Channel URIs are secrets and should be persisted to the 1Password account for the user
# and obtained at runtime via the noenFORGE deployment mechanisms.
#
# NOTE: The nforgeio-actions/neon-environment action automatically loads the 
#       user-devops/TEAM_DEVOPS_CHANNEL[value] URI into the env.TEAM_DEVOPS_CHANNEL
#       variable, making this available for subsequent actions in a workflow.

# IMPLEMENTATION NOTES:
# ---------------------
# We're sending actionable cards using the Legacy Actionable Message format because the 
# new Adaptive Card format is not currently supported by Microsoft Teams:
#
#   https://docs.microsoft.com/en-us/outlook/actionable-messages/message-card-reference
#   https://messagecardplayground.azurewebsites.net/
#
# This is a great overview for how card messages work:
#
#   https://poszytek.eu/en/microsoft-en/microsoft-message-cards-the-ultimate-guide/

name: send-team-message
description: "Sends a message to a Microsoft Teams channel URI"
inputs:
  channel-uri:
    description: "Specifies the target Teams channel URI"
    required: true
  operation:
    description: "Identifies the operation performed"
    required: true
  start-time:
    description: "Indicates when the operation started"
    required: true
  end-time:
    description: "Indicates when the operation finished"
    required: true
  elapsed-time:
    description: "Indicates how long the operation took"
    required: true
  status:
    description: "Operations status, one of: 'ok', 'warning', or 'failed'"
    required: true
runs:
  using: composite
  steps:
  - shell: pwsh
    run: ${{ github.action_path }}/script.ps1 -channelUri  "${{ inputs.channel-uri }}" -operation "${{ inputs.operation }}" -startTime "${{ inputs.start-time }}" -endTime "${{ inputs.end-time }}" -elapsedTime "${{ inputs.elapsed-time }}" -status "${{ inputs.status }}"
